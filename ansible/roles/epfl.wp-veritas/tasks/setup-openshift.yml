- name: wp-veritas Secret
  openshift:
    state: latest
    apiVersion: v1
    kind: Secret
    metadata:
      name: wp-veritas
      namespace: "{{ openshift_namespace }}"
    type: Opaque
    data:
      # ROOT_URL is not a secret, and is managed in the Deployment below.
      MONGO_URL:                      '{{ MONGO_URL                      | b64encode }}'
      METEOR_SETTINGS:                '{{ METEOR_SETTINGS                | b64encode }}'

      WP_VERITAS_ALERTS_TELEGRAM_IDS: '{{ WP_VERITAS_ALERTS_TELEGRAM_IDS | b64encode }}'
      WP_VERITAS_BOT_TOKEN:           '{{ WP_VERITAS_BOT_TOKEN           | b64encode }}'

      # WP_VERITAS_AWX_URL is not a secret, and is managed in the Deployment below.
      WP_VERITAS_AWX_TOKEN:           '{{ WP_VERITAS_AWX_TOKEN           | b64encode }}'
  vars:
    _keybase: '{{ keybase_secrets[inventory_environment] }}'

    MONGO_URL: >-
      mongodb://{{ _keybase.mongodb.user }}:{{ _keybase.mongodb.password }}@{{ _keybase.mongodb.host }}.epfl.ch/{{ _keybase.mongodb.name }}
    METEOR_SETTINGS: >-
      {{ _meteor_settings_struct | to_json }}
    _meteor_settings_struct:
      accred_password: '{{ _keybase.accred.password }}'

    WP_VERITAS_ALERTS_TELEGRAM_IDS: >-
      {{ _keybase.telegram.channels | join(",") | string }}
    WP_VERITAS_BOT_TOKEN: >-
      {{ _keybase.telegram.token }}

    WP_VERITAS_AWX_TOKEN: >-
      {{ _keybase.awx.token }}

- name: wp-veritas Deployment
  openshift:
    state: latest
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      annotations:
        image.openshift.io/triggers: "{{ [ _trigger ] | to_json }}"
      labels:
        app: wp-veritas
      name: wp-veritas
      namespace: "{{ openshift_namespace }}"
    spec:
      replicas: >-
        {{ 2 if openshift_namespace == "wwp" else 1 }}
      selector:
        matchLabels:
          app: wp-veritas
      template:
        metadata:
          labels:
            app: wp-veritas
        spec:
          containers:
          - name: meteor
            image: "{{ _existing_image if _existing_image != None
                       else wp_veritas_image_tag }}"
            env:
            - name: WP_VERITAS_AWX_URL
              value: "{{ twelvefactor[inventory_environment].WP_VERITAS_AWX_URL }}"
            - name: ROOT_URL
              value: "{{ twelvefactor[inventory_environment].ROOT_URL }}"
            - name: DEBUG
              value: >-
                {{ "-" if inventory_environment == "prod" else "*" }}
            - name: PORT
              value: "3000"
            envFrom:
            - secretRef:
                name: wp-veritas
            imagePullPolicy: Always
            ports:
            - containerPort: 3000
              protocol: TCP
  vars:
    _trigger:
      fieldPath: 'spec.template.spec.containers[?(@.name=="meteor")].image'
      from:
        kind: ImageStreamTag
        name: >-
          wp-veritas:{{ "prod" if openshift_namespace == "wwp" else "latest" }}
    _existing_deployment: >-
      {{ query('kubernetes.core.k8s', kind="Deployment",
      namespace=openshift_namespace, resource_name="wp-veritas") }}
    _existing_image: >-
      {{ _existing_deployment[0].spec.template.spec.containers[0].image | default(None) }}
